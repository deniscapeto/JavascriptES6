{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","retornoGeral","reduce","achatado","array","concat","catch","Error","erro","get","negos","map","Date","n","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","e","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","negociacaoExistente","isEquals"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService{\n\n    constructor(){\n        this._http = new HttpService();\n    }\n\n    obterNegociacoes(){\n\n        return Promise.all([this.obterNegociacoesDaSemana(),this.obterNegociacoesDaSemanaAnterior(),this.obterNegociacoesDaSemanaRetrasada()] )\n        .then(retornoGeral => {\n            return retornoGeral\n                .reduce((achatado, array) => achatado.concat(array) ,[])\n        })\n        .catch(erro =>{throw new Error(erro)} );\n    }\n\n    obterNegociacoesDaSemana(){\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(negos => {\n                return negos.map(n => new Negociacao(new Date(n.data), n.quantidade, n.valor) )\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana')\n            });\n    }\n\n    obterNegociacoesDaSemanaAnterior(){\n        \n        return this._http\n        .get('negociacoes/anterior')\n        .then(negos => {\n            return negos.map(n => new Negociacao(new Date(n.data), n.quantidade, n.valor) )\n        })\n        .catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível obter as negociações da semana anterior')\n        });\n    }\n\n    obterNegociacoesDaSemanaRetrasada(){\n        \n        return this._http\n        .get('negociacoes/retrasada')\n        .then(negos => {\n            return negos.map(n => new Negociacao(new Date(n.data), n.quantidade, n.valor) )\n        })\n        .catch(erro => {\n            console.log(erro);\n            throw new Error('Não foi possível obter as negociações da semana retrasada')\n        });\n    }\n\n    adiciona(negociacao){\n\n        return ConnectionFactory.getConnection()\n            .then(connection => {return new NegociacaoDao(connection)})\n            .then(dao => dao.adiciona(negociacao))\n            .then(() =>{\n                return 'Negociacao adicionada com sucesso!';        \n            })\n            .catch(e =>{\n                console.log(e);\n                throw new Error('Nao foi possivel adicionar negociacao');\n            });\n    }\n\n    listaTodos(){\n\n        return ConnectionFactory.getConnection()\n            .then(connection =>  new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(e =>{\n                console.log(e);\n                throw new Error('Nao foi possivel listar todas as negociacoes');\n            });\n\n    }\n\n    apagaTodos(){\n\n        return ConnectionFactory.getConnection()\n            .then(connection => {return new NegociacaoDao(connection)})\n            .then(dao => dao.apagaTodos())\n            .then(() =>{\n                return 'Negociacoes apagadas com sucesso';         \n            })\n            .catch(e => {\n                console.log(e);\n                throw new Error('Nao foi possivel apagar todas as negociacoes');\n            });    \n\n    }\n\n    importa(listaAtual){\n\n        return this.obterNegociacoes()\n        .then(negos => \n            negos.filter(negociacao =>  \n                !listaAtual.some(negociacaoExistente =>\n                    negociacaoExistente.isEquals(negociacao)))\n        )\n        .catch(erro => {\n            console.log(erro);\n            throw new Error('Nao foi possivel importar as negociacoes');\n        });\n    }\n\n}"]}