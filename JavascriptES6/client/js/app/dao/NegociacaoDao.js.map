{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","cursor","openCursor","negociacoes","atual","target","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAuB;AAAA;;AAEnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAW;AAAA;;AAEhB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;;AAElC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACAO,wCAAQC,GAAR,CAAY,iCAAZ;AACH,6BAJD;;AAMAN,oCAAQO,OAAR,GAAkB,aAAK;;AAEnBR,uCAAO,uCAAP;AACAM,wCAAQC,GAAR,CAAYE,CAAZ;AACH,6BAJD;AAKH,yBAlBM,CAAP;AAqBH;;;iDAEW;AAAA;;AAER,+BAAO,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;;AAElC,gCAAIU,SAAS,OAAKf,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRe,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOL,SAAP,GAAmB,aAAK;;AAEpB,oCAAIQ,QAAQJ,EAAEK,MAAF,CAASC,MAArB;;AAEA,oCAAGF,KAAH,EAAS;AACL,wCAAIG,OAAOH,MAAMI,KAAjB;AACAL,gDAAYM,IAAZ,CAAiB,IAAI1B,UAAJ,CAAewB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA4CJ,KAAKK,MAAjD,CAAjB;AACAR,0CAAMS,QAAN;AACH,iCAJD,MAMIvB,QAAQa,WAAR;AACP,6BAXD;;AAaAF,mCAAOF,OAAP,GAAiB,aAAK;AAClBR,uCAAO,qCAAP;AACAM,wCAAQC,GAAR,CAAYE,CAAZ;AACH,6BAHD;AAIH,yBA1BM,CAAP;AA2BH;;;iDAEW;AAAA;;AAER,+BAAO,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;;AAElC,gCAAIC,UAAU,OAAKN,WAAL,CACbO,WADa,CACD,CAAC,OAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,OAAKP,MAFJ,EAGb2B,KAHa,EAAd;;AAKAtB,oCAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACAO,wCAAQC,GAAR,CAAY,kCAAZ;AACH,6BAJD;;AAMAN,oCAAQO,OAAR,GAAkB,aAAK;;AAEnBR,uCAAO,wCAAP;AACAM,wCAAQC,GAAR,CAAYE,CAAZ;AACH,6BAJD;AAOH,yBApBM,CAAP;AAuBH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDao{\n\n    constructor(connection){\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao){\n\n        return new Promise((resolve, reject)=>{\n\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n        \n            request.onsuccess = e => {\n        \n                resolve();\n                console.log('Negociação incluída com sucesso');\n            };\n        \n            request.onerror = e => {\n        \n                reject('Não foi possível incluir a negociação');\n                console.log(e);\n            };\n        });\n\n\n    }\n\n    listaTodos(){\n\n        return new Promise((resolve, reject)=>{\n\n            let cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n    \n            let negociacoes = [];\n\n            cursor.onsuccess = e => {\n    \n                let atual = e.target.result;\n    \n                if(atual){\n                    let dado = atual.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade,dado._valor ));\n                    atual.continue();\n                }\n                else\n                    resolve(negociacoes);\n            };\n\n            cursor.onerror = e => {\n                reject('Nao foi possivel listar negociacoes');\n                console.log(e);\n            };\n        });\n    }\n\n    apagaTodos(){\n\n        return new Promise((resolve, reject)=>{\n\n            let request = this._connection\n            .transaction([this._store], 'readwrite')\n            .objectStore(this._store)\n            .clear();\n            \n            request.onsuccess = e => {\n                \n                resolve();\n                console.log('Negociações apagadas com sucesso');\n            };\n                \n            request.onerror = e => {\n        \n                reject('Não foi possível apagar as negociações');\n                console.log(e);\n            };           \n\n\n        });\n\n\n    }\n\n\n}"]}